<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yu.db.mapping.FileMapper">

	<resultMap id="BaseResultMap" type="com.yu.db.model.SFile">
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="storage_server_id" property="storageServerId"
			jdbcType="INTEGER" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		<result column="size" property="size" jdbcType="INTEGER" />
		<result column="back_storage_server_id" property="backStorageServerId"
			jdbcType="INTEGER" />
		<result column="back_full_name" property="backFullName"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="StorageServerResultMap" type="com.yu.db.model.StorageServer">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="port" property="port" jdbcType="INTEGER" />
		<result column="max_volume" property="maxVolume" jdbcType="INTEGER" />
		<result column="left_volume" property="leftVolume" jdbcType="INTEGER" />
		<result column="storage_dir" property="storageDir" jdbcType="VARCHAR" />
		<result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
		<result column="is_alive" property="isAlive" jdbcType="BIT" />
	</resultMap>

	<sql id="BASE_COLUMNS_LIST">
		name, uuid,
		storage_server_id,size,full_name,back_storage_server_id,back_full_name
	</sql>

	<insert id="insert" parameterType="com.yu.db.model.SFile">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into s_file (
		<include refid="BASE_COLUMNS_LIST" />
		)
		value
		(#{name,jdbcType=VARCHAR},
		#{uuid,jdbcType=VARCHAR},
		#{storageServerId,jdbcType=INTEGER},
		#{size,jdbcType=INTEGER},
		#{fullName,jdbcType=VARCHAR},
		#{backStorageServerId,jdbcType=INTEGER},
		#{backFullName,jdbcType=VARCHAR})
	</insert>

	<select id="getFileByUUID" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="BASE_COLUMNS_LIST" />
		from s_file
		where uuid=#{uuid,jdbcType=VARCHAR}
	</select>

	<select id="getStorageServerByFileUUID" parameterType="java.lang.String"
		resultMap="StorageServerResultMap">
		select
		s.id,s.name,s.port,s.max_volume,s.left_volume,s.is_alive,s.ip_address,s.storage_dir
		from s_file f
		inner join storage_server s
		where
		f.uuid=#{uuid,jdbcType=VARCHAR}
		and f.storage_server_id=s.id
	</select>

	<select id="getBackStorageServerByFileUUID" parameterType="java.lang.String"
		resultMap="StorageServerResultMap">
		select
		s.id,s.name,s.port,s.max_volume,s.left_volume,s.is_alive,s.ip_address,s.storage_dir
		from s_file f
		inner join storage_server s
		where
		f.uuid=#{uuid,jdbcType=VARCHAR}
		and f.back_storage_server_id=s.id
	</select>


	<update id="updateFileNameByUUID" parameterType="com.yu.db.model.SFile">
		update s_file
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="backFullName != null">
				back_full_name = #{backFullName,jdbcType=VARCHAR},
			</if>
			<if test="fullName != null">
				full_name = #{fullName,jdbcType=VARCHAR},
			</if>
		</set>
		where
		uuid=#{uuid,jdbcType=VARCHAR}
	</update>

	<delete id="deleteFileByUUID" parameterType="java.lang.String">
		delete from s_file
		where
		uuid=#{uuid,jdbcType=VARCHAR}
	</delete>

	<select id="listFileByStorageServerName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		f.name, f.uuid,f.storage_server_id,f.size,full_name,
		f.back_storage_server_id,f.back_full_name
		from s_file f
		inner join
		storage_server s
		where
		(s.id=f.storage_server_id and
		s.name=#{name,jdbcType=VARCHAR})
		or
		(s.id=f.back_storage_server_id and
		s.name=#{name,jdbcType=VARCHAR})
	</select>

</mapper>